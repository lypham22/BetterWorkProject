@model BW.Data.Contract.DTOs.RoleView
@using BW.Website.Common.Helpers;
@using BW.Common.Consts;
@{
    ViewBag.Title = "Edit";
    var isEditManageRole = AuthorizationHelper.HasPermissionFor(PermissionCodes.EditManageRole);
}
@if (isEditManageRole)
{
    <h2>Edit</h2>


    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.RoleId)


            <div class="form-group">
                @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" ng-controller="validUsernameCtrl">
                @Html.LabelFor(model => model.RoleDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" ng-controller="validUsernameCtrl">
                    @Html.EditorFor(model => model.RoleDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" ng-controller="validUsernameCtrl">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 chk_MarginTop" ng-controller="validUsernameCtrl">
                    @*@Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
